@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0

interface Observer {
  + update(o: Observable, arg: Object) : void
}

abstract class Observable {
  + addObserver(o: Observer) : void
  + notifyObservers(arg: Object) : void
  + setChanged() : void
}

abstract class Widget implements Observer {
  # panel : JPanel
  + show() : void
}

class ClockTimer extends Observable {
  - timer : Timer
  - period : int
  + ClockTimer(period: int)
  + getPeriod() : int
}

abstract class Clock extends Widget {
  # hoursOffsetTimeZone : int
  # repaintPeriod : int
  # worldPlace : String
  # lastTimeRepaint : LocalDateTime
  + Clock(hoursOffsetTimeZone: int, repaintPeriod: int)
  + update(arg0: Observable, arg1: Object) : void
  - isTimeToRepaint(now: LocalDateTime) : boolean
  # repaint(now: LocalDateTime) : void
}

class DigitalClock extends Clock {
  - formatter : DateTimeFormatter
  - clockLabel : JLabel
  + DigitalClock(hoursOffsetTimeZoneOffset: int, worldPlace: String)
  # repaint(now: LocalDateTime) : void
  - updateClockLabel(now: LocalDateTime) : void
}

class AnalogClock extends Clock {
  - now : LocalDateTime
  + AnalogClock(hoursOffsetTimeZone: int, worldPlace: String)
  # repaint(now: LocalDateTime) : void
}

class MyJPanel extends JPanel{
  + MyJPanel()
  + paintComponent(g: Graphics) : void
  - drawHand(g2d: Graphics2D, length: int, value: double, stroke: float, color: Color) : void
  - drawClockFace(g2d: Graphics2D, centerX: int, centerY: int, radius: int) : void
}


class Stopwatch extends Widget {
  - stopwatchLabel : JLabel
  - startStopButton : JButton
  - toggle : boolean
  - stopwatch : Duration
  + Stopwatch()
  + update(arg0: Observable, arg1: Object) : void
  - startStopButtonPressed() : void
  - updateClockLabel() : void
  - DurationToString(countdown: Duration) : String
}


class CountDown extends Widget {
  - countdown : Duration
  - countdownLabel : JLabel
  + CountDown(countdown: Duration)
  + update(arg0: Observable, arg1: Object) : void
  - updateClockLabel() : void
  - DurationToString(countdown: Duration) : String
}

class Main {
  {static} main(args: String[]) : void
}

AnalogClock +-- MyJPanel

@enduml
